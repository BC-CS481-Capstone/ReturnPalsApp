type Payments @model @auth(rules: [{allow: public}]) {
  id: ID!
  payment_plan: PricingPlan
  date: AWSDate
  userID: ID! @index(name: "byUser")
}

type Returns @model @auth(rules: [{allow: owner}]) {
  id: ID!
  email: AWSEmail
  date: AWSDate
  label_ids: [Int]
  method: PickupMethod
  confrimation_number: String
  address: String
  Labels: [Labels] @hasMany(indexName: "byReturns", fields: ["id"])
  userID: ID! @index(name: "byUser")
  status: PickupStatus
}

enum PickupStatus {
  ON_THE_WAY
  PICKED_UP
  COMPLETE
  CANCELLED
}

type Address @model @auth(rules: [{allow: owner}]) {
  id: ID!
  address: String!
  userID: ID! @index(name: "byUser")
  nick_name: String
  user_email: AWSEmail
}

type User @model @auth(rules: [{allow: owner}]) {
  id: ID!
  email: AWSEmail!
  phone: AWSPhone
  subscription: PricingPlan!
  firstName: String
  lastName: String
  addresses: [Address] @hasMany(indexName: "byUser", fields: ["id"])
  Payments: [Address] @hasMany(indexName: "byUser", fields: ["id"])
  Returns: [Address] @hasMany(indexName: "byUser", fields: ["id"])
}

enum PricingPlan {
  BRONZE
  SILVER
  GOLD
  PLATINUM
}

enum PickupMethod {
  DOORSTEP
  HANDOFF
}

type Labels @model @auth(rules: [{allow: owner}]) {
  id: ID!
  type: LabelType!
  image: String
  qrcode: String
  returnsID: ID! @index(name: "byReturns")
}

enum LabelType {
  QRCODE
  PHYSICAL
  DIGITAL
}

type MailingList @model @auth(rules: [{allow: public}]) {
  id: ID!
  full_name: String
  postal_code: String
  email: String
  message: String
}
 